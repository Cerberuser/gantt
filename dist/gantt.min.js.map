{"version":3,"file":"gantt.min.js","sources":["../node_modules/tslib/tslib.es6.js","../src/svg_utils.ts","../src/arrow.ts","../node_modules/unreachable-ts/dist/index.js","../src/date_utils.ts","../src/bar.ts","../src/popup.ts","../src/patches.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// tslint:disable:forin\r\n// tslint:disable:object-literal-sort-keys\r\n\r\ninterface SVGUtils {\r\n    (expr: string | Element, con?: Element): Element | null;\r\n\r\n    on(element: Element, event: string, selector: string | EventListener, callback: EventListener): void;\r\n\r\n    on(element: Element, event: string, callback: EventListener): void;\r\n\r\n    off(element: Element, event: string, handler: EventHandlerNonNull): void;\r\n\r\n    bind(element: Element, events: string, callback: EventListener): void;\r\n\r\n    delegate(element: Element, event: string, selector: string, callback: (e: any, target: any) => void): void;\r\n\r\n    closest(selector: string, element: Element): Element | null;\r\n\r\n    attr(element: Element, attr: string, value: any): void;\r\n\r\n    attr(element: Element, attr: Record<string, any>): void;\r\n\r\n    attr(element: Element, attr: string): any;\r\n}\r\n\r\nexport const $: SVGUtils = (expr, con?) => {\r\n    return typeof expr === 'string' ? (con || document).querySelector(expr) : expr || null;\r\n};\r\n\r\nexport function createSVG(tag: string, attrs: Record<string, any> & { style?: Record<string, any> }) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag) as SVGGraphicsElement;\r\n    Object.keys(attrs).forEach(attr => {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'children') {\r\n            elem.append(attrs[attr]);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else if (attr === 'style') {\r\n            Object.keys(attrs.style!).forEach(prop => {\r\n                elem.style.setProperty(prop, attrs.style![prop]);\r\n            });\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    });\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement: SVGElement, attr: string, from: any, to: any) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event: Event & { eventName: string } = document.createEvent('HTMLEvents') as any;\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(svgElement: SVGElement, attr: string, from: any, to: any, dur = '0.4s', begin = '0.1s') {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out')\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name: 'ease' | 'linear' | 'ease-in' | 'ease-out' | 'ease-in-out') {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1'\r\n    }[name];\r\n}\r\n\r\n$.on = (element: Element, event: string, selector: any, callback?: any) => {\r\n    if (!callback) {\r\n        callback = selector as EventListener;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector as string, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, events, callback) => {\r\n    events.split(/\\s+/).forEach(event => {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function(this: Element, e: any) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) {\r\n        return null;\r\n    }\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode as Element);\r\n};\r\n\r\n$.attr = (element: Element, attr: any, value?: any) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (const key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n    return;\r\n};\r\n","// tslint:disable:variable-name\r\n// tslint:disable:object-literal-sort-keys\r\n\r\nimport Bar from './bar';\r\nimport { Gantt } from './index';\r\nimport { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    public element: SVGGraphicsElement | null = null;\r\n    public from_task: Bar;\r\n    public to_task: Bar;\r\n    private gantt: Gantt;\r\n    private path: string | null = null;\r\n\r\n    constructor(gantt: Gantt, from_task: Bar, to_task: Bar) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    public update() {\r\n        this.calculate_path();\r\n        this.element!.setAttribute('d', this.path!);\r\n    }\r\n\r\n    private calculate_path() {\r\n        let start_x = this.from_task.$bar!.getX() + this.from_task.$bar!.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar!.getX() < start_x + this.gantt.options!.padding &&\r\n            start_x > this.from_task.$bar!.getX() + this.gantt.options!.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.gantt.options!.header_height +\r\n            this.gantt.options!.bar_height +\r\n            (this.gantt.options!.padding + this.gantt.options!.bar_height) * this.from_task.task!._index +\r\n            this.gantt.options!.padding;\r\n\r\n        const end_x = this.to_task.$bar!.getX() - this.gantt.options!.padding / 2;\r\n        const end_y =\r\n            this.gantt.options!.header_height +\r\n            this.gantt.options!.bar_height / 2 +\r\n            (this.gantt.options!.padding + this.gantt.options!.bar_height) * this.to_task.task!._index +\r\n            this.gantt.options!.padding;\r\n\r\n        const from_is_below_to = this.from_task.task!._index > this.to_task.task!._index;\r\n        const curve = this.gantt.options!.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options!.arrow_curve\r\n            : end_y - this.gantt.options!.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (this.to_task.$bar!.getX() < this.from_task.$bar!.getX() + this.gantt.options!.padding) {\r\n            const down_1 = this.gantt.options!.padding / 2 - curve;\r\n            const down_2 = this.to_task.$bar!.getY() + this.to_task.$bar!.getHeight() / 2 - curve_y;\r\n            const left = this.to_task.$bar!.getX() - this.gantt.options!.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    private draw() {\r\n        this.element = createSVG('path', {\r\n            className: 'arrow',\r\n            d: this.path,\r\n            'data-from': this.from_task.task!.id,\r\n            'data-to': this.to_task.task!.id\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar UnreachableError = /** @class */ (function (_super) {\r\n    __extends(UnreachableError, _super);\r\n    function UnreachableError(message) {\r\n        var _newTarget = this.constructor;\r\n        var _this = _super.call(this, message) || this;\r\n        Object.setPrototypeOf(_this, _newTarget.prototype);\r\n        return _this;\r\n    }\r\n    return UnreachableError;\r\n}(Error));\r\nexports.UnreachableError = UnreachableError;\r\nfunction unreachable(checkedValue, message) {\r\n    throw (message\r\n        ? new UnreachableError(message)\r\n        : new TypeError(\"Unexpected value: \" + JSON.stringify(checkedValue)));\r\n}\r\nexports.unreachable = unreachable;\r\n","// tslint:disable:variable-name\r\n// tslint:disable:class-name\r\n// tslint:disable:object-literal-sort-keys\r\n\r\nimport { unreachable } from 'unreachable-ts';\r\n\r\nconst YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nconst month_names = {\r\n    en: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ],\r\n    ru: [\r\n        'Январь',\r\n        'Февраль',\r\n        'Март',\r\n        'Апрель',\r\n        'Май',\r\n        'Июнь',\r\n        'Июль',\r\n        'Август',\r\n        'Сентябрь',\r\n        'Октябрь',\r\n        'Ноябрь',\r\n        'Декабрь'\r\n    ],\r\n    ptBr: [\r\n        'Janeiro',\r\n        'Fevereiro',\r\n        'Março',\r\n        'Abril',\r\n        'Maio',\r\n        'Junho',\r\n        'Julho',\r\n        'Agosto',\r\n        'Setembro',\r\n        'Outubro',\r\n        'Novembro',\r\n        'Dezembro'\r\n    ]\r\n};\r\n\r\ntype DateInput = [any, any, any, any, any, any, any];\r\n\r\nclass date_utils {\r\n    public parse(date: Date | string, date_separator = '-', time_separator = /[.:]/): Date {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts: Array<number | string>;\r\n            let time_parts: Array<number | string> | null;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0].split(date_separator).map(val => parseInt(val, 10));\r\n            time_parts = parts[1] ? parts[1].split(time_separator) : null;\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = (date_parts[1] as number) - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length === 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3] as string) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...(vals as DateInput));\r\n        }\r\n        return unreachable(date, 'Parse function received an unexpected object');\r\n    }\r\n\r\n    public to_string(date: Date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    }\r\n\r\n    public format(date: Date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang: 'en' | 'ru' | 'ptBr' = 'en') {\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_names[lang][+values[1]],\r\n            MMM: month_names[lang][+values[1]]\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values: any[] = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach(key => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    }\r\n\r\n    public diff(date_a: any, date_b: any, scale = DAY) {\r\n        let milliseconds;\r\n        let seconds;\r\n        let hours;\r\n        let minutes;\r\n        let days;\r\n        let months;\r\n        let years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            ({\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years\r\n            } as any)[scale]\r\n        );\r\n    }\r\n\r\n    public today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...(vals as [any, any, any]));\r\n    }\r\n\r\n    public now() {\r\n        return new Date();\r\n    }\r\n\r\n    public add(date: Date, qty: any, scale: string) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0)\r\n        ];\r\n        return new Date(...(vals as DateInput));\r\n    }\r\n\r\n    public start_of(date: Date, scale: string) {\r\n        const scores: any = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0\r\n        };\r\n\r\n        function should_reset(_scale: string) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds()\r\n        ];\r\n\r\n        return new Date(...(vals as DateInput));\r\n    }\r\n\r\n    public clone(date: Date) {\r\n        return new Date(...this.get_date_values(date));\r\n    }\r\n\r\n    public get_date_values(date: Date): [number, number, number, number, number, number, number] {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds()\r\n        ];\r\n    }\r\n\r\n    public get_days_in_month(date: Date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    }\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str: number | string, targetLength: number, padString: number | string) {\r\n    str = str + '';\r\n    // tslint:disable:no-bitwise\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n\r\nconst utils = new date_utils();\r\nexport default utils;\r\n","// tslint:disable:variable-name\r\n// tslint:disable:object-literal-sort-keys\r\n\r\nimport Arrow from './arrow';\r\nimport date_utils from './date_utils';\r\nimport { Gantt, ITaskInternal } from './index';\r\nimport { $, animateSVG, createSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    private static prepare_helpers() {\r\n        (SVGElement as any).prototype.getX = function() {\r\n            return +this.getAttribute('x');\r\n        };\r\n        (SVGElement as any).prototype.getY = function() {\r\n            return +this.getAttribute('y');\r\n        };\r\n        (SVGElement as any).prototype.getWidth = function() {\r\n            return +this.getAttribute('width');\r\n        };\r\n        (SVGElement as any).prototype.getHeight = function() {\r\n            return +this.getAttribute('height');\r\n        };\r\n        (SVGElement as any).prototype.getEndX = function() {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    public group: SVGElement | null = null;\r\n    public $bar: SVGGraphicsElement | null = null;\r\n    public task: ITaskInternal | null = null;\r\n    public arrows: Arrow[] | null = null;\r\n    public $bar_progress: SVGElement | null = null;\r\n    public $handle_progress: SVGElement | null = null;\r\n    private action_completed: boolean | null = null;\r\n    private gantt: Gantt | null = null;\r\n    private invalid: boolean | null = null;\r\n    private height: number | null = null;\r\n    private x: number | null = null;\r\n    private y: number | null = null;\r\n    private corner_radius: number | null = null;\r\n    private duration: number | null = null;\r\n    private width: number | null = null;\r\n    private progress_width: number | null = null;\r\n    private bar_group: SVGElement | null = null;\r\n    private handle_group: any | null = null;\r\n\r\n    constructor(gantt: Gantt, task: ITaskInternal) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    public update_bar_position({ x, width }: { x?: number; width?: number }) {\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task!.dependencies.map(dep => {\r\n                return this.gantt!.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce(\r\n                ((_: any, curr: any) => {\r\n                    return x >= curr;\r\n                }) as any,\r\n                x\r\n            ); // why it ever works?!\r\n            if (!valid_x) {\r\n                width = undefined;\r\n                return;\r\n            }\r\n            this.update_attr('x', x);\r\n        }\r\n        if (width && width >= this.gantt!.options!.column_width) {\r\n            this.update_attr('width', width);\r\n        }\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    public get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress!;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66\r\n        ];\r\n    }\r\n\r\n    public date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task!._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task!._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task!._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task!._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) {\r\n            return;\r\n        }\r\n\r\n        this.gantt!.trigger_event('date_change', [\r\n            this.task!,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second')\r\n        ]);\r\n    }\r\n\r\n    public progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task!.progress! = new_progress;\r\n        this.gantt!.trigger_event('progress_change', [this.task!, new_progress]);\r\n    }\r\n\r\n    public set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    private set_defaults(gantt: Gantt, task: ITaskInternal) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task! = task;\r\n    }\r\n\r\n    private prepare() {\r\n        this.prepare_values();\r\n        Bar.prepare_helpers();\r\n    }\r\n\r\n    private prepare_values() {\r\n        this.invalid = this.task!.invalid;\r\n        this.height = this.gantt!.options!.bar_height;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt!.options!.bar_corner_radius;\r\n        this.duration = date_utils.diff(this.task!._end, this.task!._start, 'hour') / this.gantt!.options!.step;\r\n        this.width = this.gantt!.options!.column_width * this.duration;\r\n        this.progress_width = this.gantt!.options!.column_width * this.duration * (this.task!.progress! / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task!.custom_class || ''),\r\n            'data-id': this.task!.id\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group\r\n        });\r\n    }\r\n\r\n    private draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    private draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n            style: { fill: this.task!.color }\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar!.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    private draw_progress_bar() {\r\n        if (this.invalid) {\r\n            return;\r\n        }\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n            style: { fill: this.task!.color }\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    private draw_label() {\r\n        createSVG('text', {\r\n            x: this.x! + this.width! / 2,\r\n            y: this.y! + this.height! / 2,\r\n            innerHTML: this.task!.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    private draw_resize_handles() {\r\n        if (this.invalid) {\r\n            return;\r\n        }\r\n\r\n        const bar = this.$bar!;\r\n        const handle_width = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - 9,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height! - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height! - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group\r\n        });\r\n\r\n        if (this.task!.progress! && this.task!.progress! < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group\r\n            });\r\n        }\r\n    }\r\n\r\n    private bind() {\r\n        if (this.invalid) {\r\n            return;\r\n        }\r\n        this.setup_click_event();\r\n        this.setup_hover_event();\r\n    }\r\n\r\n    private setup_click_event() {\r\n        if (this.gantt!.options!.click_trigger) {\r\n            $.on(this.group!, 'focus ' + this.gantt!.options!.popup_trigger, e => {\r\n                if (this.action_completed) {\r\n                    // just finished a move action, wait for a few seconds\r\n                    return;\r\n                }\r\n\r\n                if (e.type === 'click') {\r\n                    this.gantt!.trigger_event('click', [this.task!]);\r\n                }\r\n\r\n                this.gantt!.unselect_all();\r\n                this.group!.classList.toggle('active');\r\n\r\n                this.show_popup();\r\n            });\r\n        }\r\n    }\r\n\r\n    private setup_hover_event() {\r\n        $.on(this.group!, 'mouseover ' + this.gantt!.options!.popup_trigger, () => {\r\n            this.show_popup();\r\n        });\r\n        $.on(this.group!, 'mouseout ' + this.gantt!.options!.popup_trigger, () => {\r\n            this.gantt!.hide_popup();\r\n        });\r\n    }\r\n\r\n    private show_popup() {\r\n        if (this.gantt!.bar_being_dragged) {\r\n            return;\r\n        }\r\n\r\n        const start_date = date_utils.format(this.task!._start, 'MMM D');\r\n        const end_date = date_utils.format(date_utils.add(this.task!._end, -1, 'second'), 'MMM D');\r\n        const subtitle =\r\n            start_date + ' - ' + end_date + (this.task!.custom_data ? '<br>' + this.task!.custom_data : '');\r\n\r\n        this.gantt!.show_popup({\r\n            target_element: this.$bar!,\r\n            title: this.task!.name,\r\n            subtitle,\r\n            position: 'middle',\r\n            task: this.task!\r\n        });\r\n    }\r\n\r\n    private compute_start_end_date() {\r\n        const bar = this.$bar!;\r\n        const x_in_units = bar.getX() / this.gantt!.options!.column_width;\r\n        const new_start_date = date_utils.add(this.gantt!.gantt_start!, x_in_units * this.gantt!.options!.step, 'hour');\r\n        const width_in_units = bar.getWidth() / this.gantt!.options!.column_width;\r\n        const new_end_date = date_utils.add(new_start_date, width_in_units * this.gantt!.options!.step, 'hour');\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    private compute_progress() {\r\n        const progress = (this.$bar_progress!.getWidth() / this.$bar!.getWidth()) * 100;\r\n        return parseInt(progress as any, 10);\r\n    }\r\n\r\n    private compute_x() {\r\n        const { step, column_width } = this.gantt!.options!;\r\n        const task_start = this.task!._start;\r\n        const gantt_start = this.gantt!.gantt_start;\r\n\r\n        const diffHour = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diffHour / step) * column_width;\r\n\r\n        if (this.gantt!.view_is('Month')) {\r\n            const diffDay = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diffDay * column_width) / 30;\r\n        }\r\n        return x + 150; // TODO: this looks like a hack\r\n    }\r\n\r\n    private compute_y() {\r\n        return (\r\n            this.gantt!.options!.header_height +\r\n            this.gantt!.options!.padding +\r\n            this.task!._index * (this.height! + this.gantt!.options!.padding)\r\n        );\r\n    }\r\n\r\n    private update_attr(attr: string, value: any) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            this.$bar!.setAttribute(attr, value);\r\n        }\r\n        return this.$bar;\r\n    }\r\n\r\n    private update_progressbar_position() {\r\n        this.$bar_progress!.setAttribute('x', this.$bar!.getX() as any);\r\n        this.$bar_progress!.setAttribute('width', (this.$bar!.getWidth() * (this.task!.progress! / 100)) as any);\r\n    }\r\n\r\n    private update_label_position() {\r\n        const bar = this.$bar!;\r\n        const label = this.group!.querySelector('.bar-label') as SVGSVGElement;\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            // TODO: is this ever optimal?\r\n            let s = label.innerHTML;\r\n            while (s.length > 0 && label.getBBox().width > bar.getWidth()) {\r\n                s = s.slice(0, -1);\r\n            }\r\n            label.innerHTML = s + '...';\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', (bar.getX() + bar.getWidth() / 2) as any);\r\n        }\r\n    }\r\n\r\n    private update_handle_position() {\r\n        const bar = this.$bar!;\r\n        this.handle_group.querySelector('.handle.left').setAttribute('x', (bar.getX() + 1) as any);\r\n        this.handle_group.querySelector('.handle.right').setAttribute('x', (bar.getEndX() - 9) as any);\r\n        const handle = this.group!.querySelector('.handle.progress');\r\n        if (handle) {\r\n            handle.setAttribute('points', this.get_progress_polygon_points() as any);\r\n        }\r\n    }\r\n\r\n    private update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (const arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n","// tslint:disable:variable-name\r\n// tslint:disable:object-literal-sort-keys\r\n\r\nimport { ITaskInternal } from './index';\r\n\r\nexport interface IPopupOptions {\r\n    target_element: SVGGraphicsElement;\r\n    position: string;\r\n    task: ITaskInternal;\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nexport default class Popup {\r\n    private parent: Element & ElementCSSInlineStyle | null = null;\r\n    private custom_html: ((task: ITaskInternal) => string) | null = null;\r\n    private title: Element | null = null;\r\n    private subtitle: Element | null = null;\r\n    private pointer: Element & ElementCSSInlineStyle | null = null;\r\n\r\n    constructor(parent: Element & ElementCSSInlineStyle, custom_html: (task: ITaskInternal) => string) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    public show(options: Partial<IPopupOptions>) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task!);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent!.innerHTML = html;\r\n            this.pointer = this.parent!.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title!.innerHTML = options.title!;\r\n            this.subtitle!.innerHTML = options.subtitle!;\r\n            this.parent!.style.width = this.parent!.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta: DOMRect | null = null;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect() as DOMRect;\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        // FIXME this has to be refactored\r\n        if (options.position === 'left') {\r\n            const parentHeight = this.parent!.clientHeight + 10;\r\n            this.parent!.style.left = position_meta!.x + 'px';\r\n            if (position_meta!.y < parentHeight) {\r\n                this.parent!.style.top = position_meta!.y + 50 + 'px';\r\n            } else {\r\n                this.parent!.style.top = position_meta!.y - parentHeight + 'px';\r\n            }\r\n\r\n            this.pointer!.style.transform = 'rotateZ(90deg)';\r\n            this.pointer!.style.left = '-7px';\r\n            this.pointer!.style.top = '2px';\r\n        } else if (options.position === 'middle') {\r\n            const parentHeight = this.parent!.clientHeight + 10;\r\n            this.parent!.style.left = position_meta!.x + position_meta!.width / 2 - this.parent!.clientWidth / 2 + 'px';\r\n            if (position_meta!.y < parentHeight) {\r\n                this.parent!.style.top = position_meta!.y + 50 + 'px';\r\n            } else {\r\n                this.parent!.style.top = position_meta!.y - parentHeight + 'px';\r\n            }\r\n        }\r\n        // FIXME ends here\r\n\r\n        // show\r\n        this.parent!.style.opacity = 1 as any;\r\n    }\r\n\r\n    public hide() {\r\n        this.parent!.style.opacity = 0 as any;\r\n    }\r\n\r\n    private make() {\r\n        this.parent!.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent!.querySelector('.title');\r\n        this.subtitle = this.parent!.querySelector('.subtitle');\r\n        this.pointer = this.parent!.querySelector('.pointer');\r\n    }\r\n}\r\n","interface ObjectConstructor {\r\n    /**\r\n     * Returns the names of the enumerable properties and methods of an object.\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    keys<T extends Record<string | number | symbol, any>>(o: T): Array<keyof T>;\r\n}\r\n\r\ninterface SVGElement {\r\n    getX(): number;\r\n\r\n    getY(): number;\r\n\r\n    getWidth(): number;\r\n\r\n    getHeight(): number;\r\n\r\n    getEndX(): number;\r\n}\r\n\r\n(() => {\r\n    (SVGElement as any).prototype.getX = function() {\r\n        return +this.getAttribute('x');\r\n    };\r\n    (SVGElement as any).prototype.getY = function() {\r\n        return +this.getAttribute('y');\r\n    };\r\n    (SVGElement as any).prototype.getWidth = function() {\r\n        return +this.getAttribute('width');\r\n    };\r\n    (SVGElement as any).prototype.getHeight = function() {\r\n        return +this.getAttribute('height');\r\n    };\r\n    (SVGElement as any).prototype.getEndX = function() {\r\n        return this.getX() + this.getWidth();\r\n    };\r\n})();\r\n","// tslint:disable:variable-name\r\n// tslint:disable:object-literal-sort-keys\r\n\r\nimport Arrow from './arrow';\r\nimport Bar from './bar';\r\nimport date_utils from './date_utils';\r\nimport Popup, { IPopupOptions } from './popup';\r\nimport { $, createSVG } from './svg_utils';\r\n\r\nimport './gantt.less';\r\nimport './patches';\r\n\r\nexport interface ITask {\r\n    id: string;\r\n    name: string;\r\n    start: Date | string;\r\n    end: Date | string;\r\n    progress?: number;\r\n    dependencies?: string;\r\n    custom_class?: string;\r\n    group?: string;\r\n    custom_data?: string;\r\n}\r\n\r\nexport interface ITaskInternal extends Pick<ITask, Exclude<keyof ITask, 'dependencies'>> {\r\n    color?: string;\r\n    _start: Date;\r\n    _end: Date;\r\n    _index: number;\r\n    dependencies: string[];\r\n    invalid: boolean;\r\n}\r\n\r\nexport const enum ViewMode {\r\n    QuarterDay = 'Quarter Day',\r\n    HalfDay = 'Half Day',\r\n    Day = 'Day',\r\n    Week = 'Week',\r\n    Month = 'Month',\r\n    Year = 'Year'\r\n}\r\n\r\nexport interface IOptions {\r\n    auto_scroll: boolean;\r\n    click_trigger: boolean;\r\n    interactive: boolean;\r\n    header_height: number;\r\n    column_width: number;\r\n    step: number;\r\n    view_modes: ViewMode[];\r\n    bar_height: number;\r\n    bar_corner_radius: number;\r\n    arrow_curve: number;\r\n    padding: number;\r\n    view_mode: ViewMode;\r\n    date_format: string;\r\n    popup_trigger: keyof HTMLElementEventMap;\r\n    custom_popup_html: ((task: ITaskInternal) => string) | null;\r\n    language: 'en' | 'ru' | 'ptBr';\r\n}\r\n\r\nconst colors = [\r\n    '#60bbe4',\r\n    '#b7d95f',\r\n    '#f9c26b',\r\n    '#8ed4fd',\r\n    '#d898ca',\r\n    '#f1d154',\r\n    '#94b9c5',\r\n    '#ccc5a9',\r\n    '#57bbcb',\r\n    '#dbda52',\r\n    '#99abf9'\r\n];\r\nconst getColor = (index: number) => colors[index % colors.length];\r\n\r\nexport class Gantt {\r\n    public options: IOptions | null = null;\r\n    public bar_being_dragged: string | null = null;\r\n    public gantt_start: Date | null = null;\r\n    private $svg: SVGElement | null = null;\r\n    private $container: HTMLElement | null = null;\r\n    private popup_wrapper: HTMLElement | null = null;\r\n    private tasks: ITaskInternal[] | null = null;\r\n    private dependency_map: Record<string, string[]> | null = null;\r\n    private gantt_end: Date | null = null;\r\n    private dates: Date[] | null = null;\r\n    private layers: Record<string, SVGGraphicsElement> | null = null;\r\n    private bars: Bar[] | null = null;\r\n    private arrows: Arrow[] | null = null;\r\n    private popup: Popup | null = null;\r\n    private groups: Record<string, { color: string }> | null = null;\r\n\r\n    constructor(wrapper: Element, tasks: ITask[], options: Partial<IOptions>) {\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n    }\r\n\r\n    public unselect_all() {\r\n        Array.from(this.$svg!.querySelectorAll('.bar-wrapper')).forEach(el => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    public view_is(modes: string | string[]) {\r\n        if (typeof modes === 'string') {\r\n            return this.options!.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some(mode => this.options!.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public get_bar(id: string): any {\r\n        return this.bars!.find(bar => {\r\n            return bar.task!.id === id;\r\n        });\r\n    }\r\n\r\n    public show_popup(options: Partial<IPopupOptions>) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(this.popup_wrapper!, this.options!.custom_popup_html!);\r\n        }\r\n        this.popup.show(options);\r\n    }\r\n\r\n    public hide_popup() {\r\n        if (this.popup) {\r\n            this.popup.hide();\r\n        }\r\n    }\r\n\r\n    public trigger_event(event: string, args: any) {\r\n        if ((this.options as any)['on_' + event]) {\r\n            (this.options as any)['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    public refresh(tasks: ITask[]) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n    }\r\n\r\n    private setup_wrapper(element: Element | string) {\r\n        let svg_element;\r\n        let wrapper_element;\r\n        let local_element: Element | string | null = element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            local_element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (local_element instanceof HTMLElement) {\r\n            wrapper_element = local_element;\r\n            svg_element = local_element.querySelector('svg');\r\n        } else if (local_element instanceof SVGElement) {\r\n            svg_element = local_element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappé Gantt only supports usage of a string CSS selector,' +\r\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt'\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg!.classList.add('gantt');\r\n        }\r\n\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('gantt-container');\r\n\r\n        const parent_element = this.$svg!.parentElement!;\r\n        parent_element.appendChild(this.$container);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n    }\r\n\r\n    private setup_options(options: Partial<IOptions>) {\r\n        const default_options: IOptions = {\r\n            auto_scroll: false,\r\n            click_trigger: false,\r\n            interactive: false,\r\n            header_height: 50,\r\n            column_width: 30,\r\n            step: 24,\r\n            view_modes: [\r\n                ViewMode.QuarterDay,\r\n                ViewMode.HalfDay,\r\n                ViewMode.Day,\r\n                ViewMode.Week,\r\n                ViewMode.Month,\r\n                ViewMode.Year\r\n            ],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: ViewMode.Day,\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_trigger: 'click',\r\n            custom_popup_html: null,\r\n            language: 'en'\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n    }\r\n\r\n    private setup_tasks(tasks: ITask[]) {\r\n        // prepare tasks\r\n        this.tasks = tasks.map((_task, i) => {\r\n            const task = (_task as unknown) as ITaskInternal; // hack to get around typing problems\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start!);\r\n            task._end = date_utils.parse(task.end!);\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null!; // hack\r\n            }\r\n\r\n            // cache index\r\n            task._index = i;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every(d => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps: string[] = [];\r\n                if (task.dependencies) {\r\n                    deps = ((task.dependencies as unknown) as string)\r\n                        .split(',')\r\n                        .map(d => d.trim())\r\n                        .filter(d => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        });\r\n\r\n        this.setup_dependencies();\r\n        this.setup_groups();\r\n    }\r\n\r\n    private setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (const t of this.tasks!) {\r\n            for (const d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setup_groups() {\r\n        this.groups = {};\r\n        let groupsCount = 0;\r\n        this.tasks!.forEach(task => {\r\n            if (!this.groups![task.group!]) {\r\n                groupsCount++;\r\n                this.groups![task.group!] = { color: getColor(groupsCount) };\r\n            }\r\n        });\r\n    }\r\n\r\n    private change_view_mode(mode: ViewMode = this.options!.view_mode) {\r\n        this.update_view_scale(mode);\r\n        if (this.tasks!.length === 0) {\r\n            return;\r\n        }\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    private update_view_scale(view_mode: ViewMode) {\r\n        this.options!.view_mode = view_mode;\r\n\r\n        if (view_mode === 'Day') {\r\n            this.options!.step = 24;\r\n            this.options!.column_width = 38;\r\n        } else if (view_mode === 'Half Day') {\r\n            this.options!.step = 24 / 2;\r\n            this.options!.column_width = 38;\r\n        } else if (view_mode === 'Quarter Day') {\r\n            this.options!.step = 24 / 4;\r\n            this.options!.column_width = 38;\r\n        } else if (view_mode === 'Week') {\r\n            this.options!.step = 24 * 7;\r\n            this.options!.column_width = 140;\r\n        } else if (view_mode === 'Month') {\r\n            this.options!.step = 24 * 30;\r\n            this.options!.column_width = 120;\r\n        } else if (view_mode === 'Year') {\r\n            this.options!.step = 24 * 365;\r\n            this.options!.column_width = 120;\r\n        }\r\n    }\r\n\r\n    private setup_dates() {\r\n        this.setup_gantt_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    private setup_gantt_dates() {\r\n        this.gantt_start = this.gantt_end = null;\r\n\r\n        for (const task of this.tasks!) {\r\n            // set global start and end date\r\n            if (!this.gantt_start || task._start < this.gantt_start) {\r\n                this.gantt_start = task._start;\r\n            }\r\n            if (!this.gantt_end || task._end > this.gantt_end) {\r\n                this.gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        this.gantt_start = date_utils.start_of(this.gantt_start!, 'day');\r\n        this.gantt_end = date_utils.start_of(this.gantt_end!, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (this.view_is(['Quarter Day', 'Half Day'])) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\r\n        } else if (this.view_is('Month')) {\r\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\r\n        } else if (this.view_is('Year')) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\r\n        } else {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\r\n        }\r\n    }\r\n\r\n    private setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (\r\n            cur_date === null ||\r\n            cur_date < this.gantt_end! ||\r\n            this.dates.length * this.options!.column_width + 150 < this.$container!.offsetWidth\r\n        ) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.gantt_start!);\r\n            } else {\r\n                if (this.view_is('Year')) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is('Month')) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(cur_date, this.options!.step, 'hour');\r\n                }\r\n            }\r\n            this.dates!.push(cur_date);\r\n        }\r\n    }\r\n\r\n    private bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    private render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n    }\r\n\r\n    private setup_layers() {\r\n        this.layers = {};\r\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\r\n        // make group layers\r\n        for (const layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg\r\n            });\r\n        }\r\n    }\r\n\r\n    private make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n        this.make_legend();\r\n    }\r\n\r\n    private make_grid_background() {\r\n        const rect = {\r\n            height:\r\n                this.options!.header_height +\r\n                this.options!.padding +\r\n                (this.options!.bar_height + this.options!.padding) * this.tasks!.length,\r\n            width: this.dates!.length * this.options!.column_width + 150\r\n        };\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            ...rect,\r\n            class: 'grid-background',\r\n            append_to: this.layers!.grid\r\n        });\r\n        $.attr(this.$svg!, rect);\r\n    }\r\n\r\n    private make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers!.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers!.grid });\r\n\r\n        const row_width = this.dates!.length * this.options!.column_width;\r\n        const row_height = this.options!.bar_height + this.options!.padding;\r\n\r\n        let row_y = this.options!.header_height + this.options!.padding / 2;\r\n\r\n        this.tasks!.forEach(task => {\r\n            createSVG('rect', {\r\n                x: 150,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n                style: { fill: this.groups![task.group!].color }\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 150,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'grid-row-line',\r\n                append_to: lines_layer,\r\n                style: { stroke: this.groups![task.group!].color }\r\n            });\r\n\r\n            row_y += this.options!.bar_height + this.options!.padding;\r\n        });\r\n    }\r\n\r\n    private make_grid_header() {\r\n        const header_width = this.dates!.length * this.options!.column_width;\r\n        const header_height = this.options!.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width + 150,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers!.grid\r\n        });\r\n    }\r\n\r\n    private make_legend() {\r\n        const legend_height = this.options!.bar_height + this.options!.padding;\r\n        const common_attrs = {\r\n            x: 0,\r\n            y: 60,\r\n            width: 150,\r\n            append_to: this.layers!.grid\r\n        };\r\n        Array.from(new Set(this.tasks!.map(t => t.group!))).forEach(group => {\r\n            const height = this.tasks!.filter(t => t.group === group).length * legend_height;\r\n            createSVG('rect', {\r\n                ...common_attrs,\r\n                height,\r\n                fill: this.groups![group].color\r\n            });\r\n            const child = document.createElement('div');\r\n            child.className = 'legend';\r\n            const span = document.createElement('span');\r\n            child.appendChild(span);\r\n            span.innerText = group;\r\n            createSVG('foreignObject', {\r\n                ...common_attrs,\r\n                height,\r\n                children: child\r\n            });\r\n            common_attrs.y += height;\r\n        });\r\n    }\r\n\r\n    private make_grid_ticks() {\r\n        let tick_x = 150; // padding\r\n        const tick_y = this.options!.header_height + this.options!.padding / 2;\r\n        const tick_height = (this.options!.bar_height + this.options!.padding) * this.tasks!.length;\r\n\r\n        for (const date of this.dates!) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is('Day') && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (this.view_is('Week') && date.getDate() >= 1 && date.getDate() < 8) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (this.view_is('Month') && (date.getMonth() + 1) % 3 === 0) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers!.grid\r\n            });\r\n\r\n            if (this.view_is('Month')) {\r\n                tick_x += (date_utils.get_days_in_month(date) * this.options!.column_width) / 30;\r\n            } else {\r\n                tick_x += this.options!.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    private make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is('Day')) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') / this.options!.step) *\r\n                    this.options!.column_width +\r\n                150; // left padding\r\n            const y = 0;\r\n\r\n            const width = this.options!.column_width;\r\n            const height =\r\n                (this.options!.bar_height + this.options!.padding) * this.tasks!.length +\r\n                this.options!.header_height +\r\n                this.options!.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers!.grid\r\n            });\r\n        }\r\n    }\r\n\r\n    private make_dates() {\r\n        for (const date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x + 150,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers!.date\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers!.date\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (($upper_text.getBBox() as any).x2 > this.layers!.grid.getBBox().width) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private get_dates_to_draw() {\r\n        let last_date: Date | null = null;\r\n        return this.dates!.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date!, i);\r\n            last_date = date;\r\n            return d;\r\n        });\r\n    }\r\n\r\n    private get_date_info(date: Date, last_date: Date, i: number) {\r\n        if (!last_date) {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text: any = {\r\n            'Quarter Day_lower': date_utils.format(date, 'HH', this.options!.language),\r\n            'Half Day_lower': date_utils.format(date, 'HH', this.options!.language),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate() ? date_utils.format(date, 'D', this.options!.language) : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options!.language)\r\n                    : date_utils.format(date, 'D', this.options!.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options!.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options!.language),\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate() ? date_utils.format(date, 'D MMM', this.options!.language) : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(date, 'D MMM', this.options!.language)\r\n                        : date_utils.format(date, 'D', this.options!.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'MMMM', this.options!.language) : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'MMMM', this.options!.language) : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options!.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options!.language)\r\n                    : ''\r\n        };\r\n\r\n        const base_pos = {\r\n            x: i * this.options!.column_width,\r\n            lower_y: this.options!.header_height,\r\n            upper_y: this.options!.header_height - 25\r\n        };\r\n\r\n        const x_pos: any = {\r\n            'Quarter Day_lower': (this.options!.column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (this.options!.column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: this.options!.column_width / 2,\r\n            Day_upper: (this.options!.column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (this.options!.column_width * 4) / 2,\r\n            Month_lower: this.options!.column_width / 2,\r\n            Month_upper: (this.options!.column_width * 12) / 2,\r\n            Year_lower: this.options!.column_width / 2,\r\n            Year_upper: (this.options!.column_width * 30) / 2\r\n        };\r\n\r\n        return {\r\n            upper_text: date_text[`${this.options!.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options!.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options!.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options!.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y\r\n        };\r\n    }\r\n\r\n    private make_bars() {\r\n        this.bars = this.tasks!.map(task => {\r\n            task.color = this.groups![task.group!].color;\r\n            const bar = new Bar(this, task);\r\n            this.layers!.bar.appendChild(bar.group!);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    private make_arrows() {\r\n        this.arrows = [];\r\n        for (const task of this.tasks!) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map(task_id => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) {\r\n                        return;\r\n                    }\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars![dependency._index], // from_task\r\n                        this.bars![task._index] // to_task\r\n                    );\r\n                    this.layers!.arrow.appendChild(arrow.element!);\r\n                    return arrow;\r\n                })\r\n                .filter((a): a is Arrow => !!a); // filter falsy values\r\n            this.arrows = this.arrows!.concat(arrows);\r\n        }\r\n    }\r\n\r\n    private map_arrows_on_bars() {\r\n        for (const bar of this.bars!) {\r\n            bar.arrows = this.arrows!.filter(arrow => {\r\n                return arrow.from_task.task!.id === bar.task!.id || arrow.to_task.task!.id === bar.task!.id;\r\n            });\r\n        }\r\n    }\r\n\r\n    private set_width() {\r\n        const cur_width = (this.$svg!.getBoundingClientRect().width as unknown) as string;\r\n        const actual_width = this.$svg!.querySelector('.grid .grid-row')!.getAttribute('width')!;\r\n        if (cur_width < actual_width) {\r\n            this.$svg!.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    private set_scroll_position() {\r\n        if (!this.options!.auto_scroll) {\r\n            return;\r\n        }\r\n        const parent_element = this.$svg!.parentElement;\r\n        if (!parent_element) {\r\n            return;\r\n        }\r\n\r\n        const hours_before_first_task = date_utils.diff(this.get_oldest_starting_date(), this.gantt_start, 'hour');\r\n\r\n        parent_element.scrollLeft =\r\n            (hours_before_first_task / this.options!.step) * this.options!.column_width - this.options!.column_width;\r\n    }\r\n\r\n    private bind_grid_click() {\r\n        $.on(this.$svg!, this.options!.popup_trigger, '.grid-row, .grid-header', () => {\r\n            this.unselect_all();\r\n            this.hide_popup();\r\n        });\r\n    }\r\n\r\n    private bind_bar_events() {\r\n        let is_dragging = false;\r\n        if (!this.options!.interactive) {\r\n            return;\r\n        }\r\n        let x_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id: string | null = null;\r\n        let bars: Bar[] = []; // instanceof Bar\r\n        this.bar_being_dragged = null;\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg!, 'mousedown', '.bar-wrapper, .handle', ((e: any, element: any) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element)!;\r\n\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            bar_wrapper.classList.add('active');\r\n\r\n            x_on_start = e.offsetX;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id')!;\r\n            const ids = [parent_bar_id, ...this.get_all_dependent_tasks(parent_bar_id)];\r\n            bars = ids.map(id => this.get_bar(id));\r\n\r\n            this.bar_being_dragged = parent_bar_id;\r\n\r\n            bars.forEach(bar => {\r\n                const $bar: any = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n            });\r\n        }) as any);\r\n\r\n        $.on(this.$svg!, 'mousemove', (e: any) => {\r\n            if (!action_in_progress()) {\r\n                return;\r\n            }\r\n            const dx = e.offsetX - x_on_start;\r\n\r\n            bars.forEach(bar => {\r\n                const $bar: any = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx);\r\n\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task!.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task!.id) {\r\n                        bar.update_bar_position({\r\n                            width: $bar.owidth + $bar.finaldx\r\n                        });\r\n                    }\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', () => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach(bar => bar.group!.classList.remove('active'));\r\n            }\r\n\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        $.on(this.$svg!, 'mouseup', () => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach(bar => {\r\n                const $bar: any = bar.$bar;\r\n                if (!$bar.finaldx) {\r\n                    return;\r\n                }\r\n                bar.date_changed();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    private bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let is_resizing: boolean | null = null;\r\n        let bar: Bar | null = null;\r\n        let $bar_progress: any = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg!, 'mousedown', '.handle.progress', ((e: any, handle: any) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle)!;\r\n            const id = $bar_wrapper.getAttribute('data-id')!;\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar!.$bar_progress;\r\n            $bar = bar!.$bar!;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        }) as any);\r\n\r\n        $.on(this.$svg!, 'mousemove', (e: any) => {\r\n            if (!is_resizing) {\r\n                return;\r\n            }\r\n            let dx = e.offsetX - x_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar!.$handle_progress!;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar!.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg!, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) {\r\n                return;\r\n            }\r\n            bar!.progress_changed();\r\n            bar!.set_action_completed();\r\n        });\r\n    }\r\n\r\n    private get_all_dependent_tasks(task_id: string) {\r\n        let out: string[] = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce<string[]>((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map![curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter(d => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    private get_snap_position(dx: number) {\r\n        const odx = dx;\r\n        let rem;\r\n        let position;\r\n\r\n        if (this.view_is('Week')) {\r\n            rem = dx % (this.options!.column_width / 7);\r\n            position = odx - rem + (rem < this.options!.column_width / 14 ? 0 : this.options!.column_width / 7);\r\n        } else if (this.view_is('Month')) {\r\n            rem = dx % (this.options!.column_width / 30);\r\n            position = odx - rem + (rem < this.options!.column_width / 60 ? 0 : this.options!.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options!.column_width;\r\n            position = odx - rem + (rem < this.options!.column_width / 2 ? 0 : this.options!.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    private get_task(id: string) {\r\n        return this.tasks!.find(task => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    private get_oldest_starting_date() {\r\n        return this.tasks!.map(task => task._start).reduce((prev_date, cur_date) =>\r\n            cur_date <= prev_date ? cur_date : prev_date\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    private clear() {\r\n        this.$svg!.innerHTML = '';\r\n    }\r\n}\r\n\r\nfunction generate_id(task: ITaskInternal | ITask) {\r\n    return (\r\n        task.name +\r\n        '_' +\r\n        Math.random()\r\n            .toString(36)\r\n            .slice(2, 12)\r\n    );\r\n}\r\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","keys","forEach","attr","append_to","appendChild","append","innerHTML","style","prop","setProperty","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","values","keyTimes","keySplines","name","ease","linear","ease-in","ease-out","ease-in-out","cubic_bezier","getAnimationElement","event_1","createEvent","initEvent","eventName","dispatchEvent","on","element","event","selector","callback","delegate","bind","off","handler","removeEventListener","events","split","addEventListener","e","delegatedTarget","target","closest","matches","parentNode","value","getAttribute","key","Arrow","calculate_path","path","start_x","from_task","$bar","getX","getWidth","_this","to_task","gantt","options","padding","start_y","header_height","bar_height","task","_index","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","down_1","down_2","getY","getHeight","left","className","d","data-from","id","data-to","draw","extendStatics","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","create","defineProperty","exports","_super","UnreachableError","Error","message","_newTarget","checkedValue","TypeError","JSON","stringify","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","ru","ptBr","padStart","str","targetLength","padString","String","repeat","slice","utils","date_utils","date","date_separator","time_separator","Date","unreachable","date_parts","time_parts","parts","map","val","parseInt","vals","parseFloat","concat","with_time","get_date_values","date_string","time_string","format_string","lang","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","formatted_values","sort","a","includes","replace","push","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","scores","_a","should_reset","_scale","max_score","month","year","Bar","SVGElement","getEndX","x","width","dependencies","dep","get_bar","reduce","_","curr","undefined","update_attr","column_width","update_label_position","update_handle_position","update_progressbar_position","update_arrow_position","bar_progress","$bar_progress","changed","new_start_date","new_end_date","Number","_start","_end","trigger_event","add","new_progress","compute_progress","progress","action_completed","setTimeout","prepare_values","prepare_helpers","invalid","height","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","diff","step","progress_width","group","class","custom_class","data-id","bar_group","handle_group","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","rx","ry","fill","color","classList","requestAnimationFrame","bar","$handle_progress","points","get_progress_polygon_points","join","setup_click_event","setup_hover_event","click_trigger","popup_trigger","type","unselect_all","toggle","show_popup","hide_popup","bar_being_dragged","subtitle","format","custom_data","target_element","title","position","x_in_units","gantt_start","width_in_units","task_start","view_is","isNaN","label","getBBox","remove","handle","arrows","_i","update","set_defaults","prepare","Popup","custom_html","html","parent","pointer","clientWidth","position_meta","HTMLElement","getBoundingClientRect","parentHeight","clientHeight","top","transform","opacity","hide","make","colors","Gantt","$svg","querySelectorAll","el","modes","view_mode","isArray","some","mode","bars","find","popup","popup_wrapper","custom_popup_html","show","args","tasks","setup_tasks","change_view_mode","svg_element","wrapper_element","local_element","$container","createElement","parentElement","auto_scroll","interactive","view_modes","date_format","language","_task","parse","start","end","today","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","setup_groups","dependency_map","_c","_b","groups","groupsCount","index","getColor","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","start_of","dates","cur_date","offsetWidth","clone","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layers_1","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","make_legend","rect","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","stroke","legend_height","common_attrs","Set","child","span","innerText","children","tick_x","tick_y","tick_height","tick_class","get_days_in_month","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Quarter Day_lower","Half Day_lower","Day_lower","Week_lower","Month_lower","Year_lower","Quarter Day_upper","Half Day_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","task_id","dependency","get_task","arrow","this_1","this_2","cur_width","actual_width","parent_element","hours_before_first_task","get_oldest_starting_date","scrollLeft","is_dragging","x_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","dx","get_snap_position","update_bar_position","date_changed","set_action_completed","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","progress_changed","out","to_process","acc","Boolean","rem","odx","prev_date","wrapper","setup_wrapper","setup_options","bind_events"],"mappings":"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"}